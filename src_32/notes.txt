; **************************************************************************************
;
; JON-STR 7-13-2023
;  - "I don't remember things that I do not write down..."
;  - (x) before useful links are used as citations for Highlights
;
; **************************************************************************************

* USEFUL LINKS *
- (1) https://pagekey.io/projects/pkos                                              ; main inspiration for this project, initial versions are modified versions of this repo
- (2) http://www.osdever.net/tutorials/view/brans-kernel-development-tutorial       ; oldie but a goodie
- (3) http://www.jamesmolloy.co.uk/tutorial_html/                                   ; deeper, focused on *nix like kernel


* Highlights *
- (On calling C from ASM and ASM from C)
    2.3. Adding some C code
    Interfacing C code and assembly is dead easy. You just have to know the calling convention used. GCC on x86 uses the __cdecl calling convention:

    All parameters to a function are passed on the stack.
    The parameters are pushed right-to-left.
    The return value of a function is returned in EAX.
    ...so the function call:

    d = func(a, b, c);
    Becomes:

    push [c]
    push [b]
    push [a]
    call func
    mov [d], eax
    See? nothing to it! So, you can see that in our asm snippet above, that 'push ebx' is actually passing the value of ebx as a parameter to the function main().

    2.3.1. The C code
    // main.c -- Defines the C-code kernel entry point, calls initialisation routines.
    // Made for JamesM's tutorials

    int main(struct multiboot *mboot_ptr)
    {
        // All our initialisation calls will go in here.
        return 0xDEADBABA;
    }

* Environment Helpers *
- bash aliases
    # JON-STR 6-26-2023

    # edit this file
    alias edit-aliases="nano ~/.bash_aliases"
    alias refresh-aliases="source ~/.bash_aliases"

    # maintenance
    alias apt="sudo apt"
    alias full-update="apt update && apt update -y && apt dist-upgrade -y && snap refresh"

    alias cls="clear"
    alias reboot="sudo shutdown -r now"

    # programming
    alias untar="tar -xzvf"
    alias and="&&"

    # (DEPROCATED)
    alias j_xcc="i386-elf-gcc"
    alias j_xld="i386-elf-ld"